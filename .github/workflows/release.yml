on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release a new version

jobs:
  release:
    name: Release a new version
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2     
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false  
  build:
    needs: release
    name: build release binnary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          GOOS: linux
          GOARCH: amd64
        - os: ubuntu-latest
          GOOS: linux
          GOARCH: arm64
        - os: macos-latest
          GOOS: darwin
          GOARCH: amd64
        - os: windows-latest
          GOOS: windows
          GOARCH: amd64
          EXT: .exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: |
          GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -o tcpbc.${{ matrix.GOOS }}.${{ matrix.GOARCH }}${ matrix.EXT } -v ./cmd/client
          GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -o tcpbs.${{ matrix.GOOS }}.${{ matrix.GOARCH }}${ matrix.EXT } -v ./cmd/server      
      - name: Upload Release Asset tcpbc
        id: upload-release-asset-tcpbc
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./tcpbc.${{ matrix.GOOS }}.${{ matrix.GOARCH }}
          asset_name: tcpbc.${{ matrix.GOOS }}.${{ matrix.GOARCH }}
          asset_content_type: application/octet-stream
      - name: Upload Release Asset tcpbs
        id: upload-release-asset-tcpbs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./tcpbs.${{ matrix.GOOS }}.${{ matrix.GOARCH }}${ matrix.EXT }
          asset_name: tcpbs.${{ matrix.GOOS }}.${{ matrix.GOARCH }}${ matrix.EXT }
          asset_content_type: application/octet-stream          
